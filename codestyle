#!/usr/bin/env python

import os
import sys
import click
from sarge import get_stdout, run

stderr = click.get_text_stream('stderr')

OK = 0
FLAKE8_FAILED = 1
ESLINT_FAILED = 2


def flake8(files):
    if files:
        click.echo('\n--- Flake8 ---')
        if run('flake8 %s' % files).returncode:
            stderr.write('> Flake8: FAIL\n')
            return FLAKE8_FAILED
        click.echo('> Flake8: ok')
    return OK


def eslint(files):
    if files:
        click.echo('\n--- ESLint ---')
        if run('eslint --ext .js --ext .jsx %s' % files).returncode:
            stderr.write('> ESLint: FAIL\n')
            return ESLINT_FAILED
        click.echo('> ESLint: ok')
    return OK


@click.command()
@click.argument('path', default='/code/')
@click.option('--all', 'changes', flag_value='all', default=True,
              help='Check all files (default)')
@click.option('--changes', 'changes', flag_value='changes',
              help='Check only changed files')
@click.option('--staged', 'changes', flag_value='staged',
              help='Check only staged changes')
def codestyle(path, changes):
    os.chdir(path)
    py_files = js_files = '.'
    if changes != 'all':
        diff = get_stdout(f'git diff {"--staged " if changes == "staged" else " "}--ignore-space-at-eol -- "*.py" "*.js" "*.jsx" | grep "[+][+][+]" | cut -c7-')
        cached = get_stdout(f'git diff {"--staged " if changes == "staged" else " "}--cached --ignore-space-at-eol -- "*.py" "*.js" "*.jsx" | grep "[+][+][+]" | cut -c7-')
        files = set(diff.split('\n') + cached.split('\n'))
        # Exclude non-existent files
        files = [f for f in files if os.path.isfile(f)]
        py_files = ' '.join(f for f in files if f.endswith('.py'))
        js_files = ' '.join(f for f in files if f.endswith(('.js', '.jsx')))
    sys.exit(flake8(py_files) + eslint(js_files))


if __name__ == '__main__':
    codestyle()
